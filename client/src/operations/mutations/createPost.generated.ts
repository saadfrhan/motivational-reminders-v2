/* eslint-disable */ /**
 *
 * THIS FILE IS AUTOGENERATED, DO NOT EDIT IT!
 *
 * instead, edit one of the `.graphql` files in this project and run
 *
 * npm run graphql-codegen
 *
 * for this file to be re-created
 */

import * as Types from '../../app/services/types.generated';

import { api } from '../../app/services/baseApi';
export type CreatePostMutationVariables = Types.Exact<{
  input?: Types.Maybe<Types.PostInput>;
}>;


export type CreatePostMutation = { __typename?: 'Mutation', createPost?: { __typename?: 'Post', _id: string, postTitle: string, postType: string, postedAt?: any | null | undefined, postLink: string, thumbnailUrl: string } | null | undefined };


export const CreatePostDocument = `
    mutation CreatePost($input: PostInput) {
  createPost(input: $input) {
    _id
    postTitle
    postType
    postedAt
    postLink
    thumbnailUrl
  }
}
    `;

const injectedRtkApi = api.injectEndpoints({
  endpoints: (build) => ({
    CreatePost: build.mutation<CreatePostMutation, CreatePostMutationVariables | void>({
      query: (variables) => ({ document: CreatePostDocument, variables })
    }),
  }),
});

export { injectedRtkApi as api };
export const { useCreatePostMutation } = injectedRtkApi;

