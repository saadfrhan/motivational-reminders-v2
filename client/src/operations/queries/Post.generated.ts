/* eslint-disable */ /**
 *
 * THIS FILE IS AUTOGENERATED, DO NOT EDIT IT!
 *
 * instead, edit one of the `.graphql` files in this project and run
 *
 * npm run graphql-codegen
 *
 * for this file to be re-created
 */

import * as Types from '../../app/services/types.generated';

import { api } from '../../app/services/baseApi';
export type PostQueryVariables = Types.Exact<{
  id: Types.Scalars['String'];
}>;


export type PostQuery = { __typename?: 'Query', getPost: { __typename?: 'Post', postTitle: string, postType: string, postLink: string, postedAt?: any | null | undefined, thumbnailUrl: string, _id: string } };


export const PostDocument = `
    query Post($id: String!) {
  getPost(_id: $id) {
    postTitle
    postType
    postLink
    postedAt
    thumbnailUrl
    _id
  }
}
    `;

const injectedRtkApi = api.injectEndpoints({
  endpoints: (build) => ({
    Post: build.query<PostQuery, PostQueryVariables>({
      query: (variables) => ({ document: PostDocument, variables })
    }),
  }),
});

export { injectedRtkApi as api };
export const { usePostQuery, useLazyPostQuery } = injectedRtkApi;

