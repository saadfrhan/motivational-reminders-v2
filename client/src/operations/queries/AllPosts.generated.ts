/* eslint-disable */ /**
 *
 * THIS FILE IS AUTOGENERATED, DO NOT EDIT IT!
 *
 * instead, edit one of the `.graphql` files in this project and run
 *
 * npm run graphql-codegen
 *
 * for this file to be re-created
 */

import * as Types from '../../app/services/types.generated';

import { api } from '../../app/services/baseApi';
export type AllPostsQueryVariables = Types.Exact<{
  filter?: Types.Maybe<Types.FilterOptions>;
}>;


export type AllPostsQuery = { __typename?: 'Query', getPosts: Array<{ __typename?: 'Post', _id: string, postTitle: string, postedAt?: any | null | undefined, thumbnailUrl: string } | null | undefined> };


export const AllPostsDocument = `
    query AllPosts($filter: FilterOptions) {
  getPosts(filter: $filter) {
    _id
    postTitle
    postedAt
    thumbnailUrl
  }
}
    `;

const injectedRtkApi = api.injectEndpoints({
  endpoints: (build) => ({
    AllPosts: build.query<AllPostsQuery, AllPostsQueryVariables | void>({
      query: (variables) => ({ document: AllPostsDocument, variables })
    }),
  }),
});

export { injectedRtkApi as api };
export const { useAllPostsQuery, useLazyAllPostsQuery } = injectedRtkApi;

